#!/usr/bin/env node

'use strict';

process.title = 'nefbl-cli';

// 来自node包的资源
const hai2007_nodejs = require('@hai2007/nodejs');
const inquirer = require('inquirer');

// 原生接口
const fs = require('fs');

// 本地资源
const pkg = require('../package.json');
const options = require('./options');

// 组装好缩写和全写的映射
let shortHands = {};
for (let key in options.config) {
    if (options.config[key].short) shortHands["-" + options.config[key].short] = "--" + key;
}

// 获取命令行参数
const parsed = hai2007_nodejs.option(shortHands, process.argv);

const terminal = parsed.__terminal__[0];

// 如果创建脚手架项目
if (terminal == 'create') {

    let projectName = parsed.__terminal__[1];

    // 先获取参数
    inquirer.prompt([{
        type: 'input',
        name: 'description',
        message: '请输入项目描述',
        default: ''
    }]).then(answers => {

        let sourcePath = hai2007_nodejs.fullPath('../Copy-project', __dirname);
        let targetPath = hai2007_nodejs.fullPath('./' + projectName, process.cwd());

        // 复制项目到命令行所在位置
        hai2007_nodejs.copySync(sourcePath, targetPath);

        // 修改项目参数
        for (let item of ["index.html", "package.json", 'package-lock.json']) {

            let targetFile = hai2007_nodejs.fullPath('./' + projectName + "/" + item, process.cwd());

            // 读取
            let fileContent = fs.readFileSync(targetFile, 'utf-8');

            // 替换内容
            fileContent = fileContent.replace('project-name-will-replace', projectName);
            fileContent = fileContent.replace('project-description-will-replace', answers.description);

            // 写回
            fs.writeFileSync(targetFile, fileContent);

        }

    });

}

// 否则
else {

    if ('version' in parsed) {

        // 打印版本号
        console.log(pkg.version);

    } else if ('help' in parsed) {

        let commandOption = options.command[parsed.help[0]];
        if (commandOption) {

            let configs = "";
            for (let item of commandOption.config) {
                configs += `【${options.config[item].info}】 ${options.config[item].demo}\n`;
            }

            let command = `
   【 ${commandOption.info}】 ${commandOption.demo}

    下面是可选的配置项：
    ${configs}
    `;

            console.log(command);
        } else {
            console.log(options.help);
        }

    } else {

        // 打印帮助信息
        console.log(options.help);

    }

}
